name: Build to Azure VPS

on:
  push:
    branches:
      - feat/views
      - main
jobs:
  build:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.14'

      - name: Install dependencies
        run: npm install

      - name: Build Angular app
        run: npm run build -- --configuration production

      - name: Build Docker image
        run: |
          docker build -t studadvice:${{ github.sha }} .
          docker tag studadvice:${{ github.sha }} studadvice:latest

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Push Docker Image to GitHub Container Registry
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/studadvice:${{ github.sha }}



  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/feat/views'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist

      - run: ls -l dist

      - name: Zip the build directory
        run: zip -r dist.zip dist/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}-${{ github.sha }}
          release_name: Release ${{ github.ref_name }}-${{ github.sha }}
          draft: false
          prerelease: true
          body: "Description of the release"

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist.zip
          asset_name: dist.zip
          asset_content_type: application/zip