.unite-over {
    z-index: 2;
}

.clear, .preview {
    position: absolute;
    top: 6px;
    right: 0;
}

p label.hidden {
    border: 0;
    clip: rect(1px 1px 1px 1px);
    clip: rect(1px, 1px, 1px, 1px);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
}

/* ****** TOOLTIP ERREUR ******** */

.textareaComponent p.input-invalid > span::before,
.input-invalid > span::before {
    background-color: var(--c-important);
}

.input-invalid input {
    border-color: var(--c-important) !important;
}

.input-invalid span.error {
    position: absolute;
    left: 0;
    padding: 0.3rem 0.5rem;
    display: block;
    width: 100%;
    top: calc(100% + .5em);
    z-index: 100;
    color: white;
    font-size: 1rem;
    text-align: center;
    border-radius: 15px;
    background-color: var(--c-important);
}

.input-invalid > span:not(.unite):after {
    position: absolute;
    display: block;
    bottom: 5px;
    right: 13px;
    width: 24px;
    height: 22px;
}

.input-invalid span.error:after {
    content: " ";
    display: block;
    width: 0;
    height: 0;
    position: absolute;
    top: -8px;
    right: 15px;
    border-left: 10px solid transparent;
    border-right: 10px solid transparent;
    border-bottom: 10px solid var(--c-important);
}

.input-invalid input:focus, p.input-invalid textarea:focus {
    border-color: var(--c-important) !important;
}

.icon-clear, .icon-preview {
    color: var(--grey-darken-1);
}

::ng-deep .cdk-overlay-container {
    position: fixed;
    top: 0;
    left: 25%;
    right: 25%;
    display: block;
    z-index: 100000;
}

